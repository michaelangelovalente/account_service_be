spring.application.name=account_service_be
server.servlet.context-path=/api
server.port=28852

### H2 DB
#spring.datasource.url=jdbc:h2:mem:account_service_db
spring.datasource.url=jdbc:h2:file:./h2-database/account_service_db/test_h2-db
#spring.datasource.url=jdbc:h2:file:~/h2-database/account_service_db
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=test
spring.datasource.password=password
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.jpa.hibernate.ddl-auto=create-drop
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console
#color console output
spring.output.ansi.enabled=ALWAYS



### LOGGING

## DEBUG and Trace level logs will be ignored
#logging.level.root=info
## all levels shown
logging.level.root=trace
logging.level.org.springframework.security=DEBUG

## deactivate no activity IO for H2
logging.level.org.apache.tomcat.util.net.NioEndpoint=warn

logging.pattern.console=%d{HH:mm} %-5level %logger{36} - %msg%n

## log file
## solution 1: specify logging.file.name
#logging.file.name=logfile.log                     //in a project root folder
#logging.file.name=relativepath/to/logfile.log     //relative path with filename
#logging.file.name=/fullpath/to/logfile.log        //full path with filename

## solution 2 specify logging.file.path --> the log file will automatically be named spring.log
#logging.file.path=./                         // -> spring.log in a project root folder
#logging.file.path=relativepath/to/logs       // -> relativepath/to/logs/spring.log
#logging.file.path=/fullpath/to/logs          // -> /fullpath/to/logs/spring.log
logging.file.path=./acc_service_be_logs

# log formatting for file =/= log formatting console
logging.pattern.file=%d{HH:mm} %-5level %logger{36} - %msg%n


# show spring error message field
server.error.include-message=always


#for testing:
#spring.datasource.url=<path of your choice>
#spring.jpa.hibernate.ddl-auto=create-drop  <--- will reset database on close, new database on start
